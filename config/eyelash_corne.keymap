#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        HT: HT {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        LBRKT {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 17>;
        };

        RBRCK {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <23 24>;
        };

        LBR {
            bindings = <&kp LBRC>;
            key-positions = <15 16>;
        };

        RBR {
            bindings = <&kp RBRC>;
            key-positions = <25 24>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&none    &HT LALT A  &HT LCTRL S  &HT LSHIFT D  &kp R       &kp T                               &kp UP                &HT LALT A  &HT LCTRL S  &HT LSHIFT D  &kp O        &kp P          &none  
&none    &HT LALT A  &HT LCTRL S  &HT LSHIFT D  &HT LGUI F  &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &HT LALT A  &HT LCTRL S  &HT LSHIFT D &HT LCTRL L  &HT RALT SEMI  &none  
&none    &HT LALT A  &HT LCTRL S  &HT LSHIFT D  &kp V       &kp B        &none                  &kp DOWN             &HT LALT A  &HT LCTRL S  &HT LSHIFT D  &kp DOT      &kp FSLH       &none  
                         &HT LALT A  &HT LCTRL S  &HT LSHIFT D                                                   &HT LALT A  &HT LCTRL S  &HT LSHIFT D
            >;

             sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

           
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp GRAVE  &kp TILDE  &kp UNDER  &kp C_AC_COPY  &kp C_AC_PASTE                                 &mmv MOVE_UP                     &kp EQUAL  &kp N7     &kp N8   &kp N9  &kp RIGHT_BRACE    &none
&trans  &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR       &kp RPAR                       &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp N4     &kp N5   &kp N6  &kp SQT            &none
&trans  &kp EXCL   &kp AT     &kp HASH   &kp DLLR       &kp PRCNT        &kp C_MUTE                    &mmv MOVE_DOWN                   &kp BSLH   &kp N1     &kp N2   &kp N3  &kp DOUBLE_QUOTES  &none
                              &trans     &trans         &trans                                                                          &kp N0     &kp EQUAL  &kp DEL
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp GRAVE  &kp TILDE  &kp UNDER  &kp LEFT_BRACKET  &kp LEFT_BRACE                                 &mmv MOVE_UP                     &trans  &kp GRAVE  &kp TILDE  &kp UNDER  &kp LEFT_BRACKET  &kp LEFT_BRACE 
&trans  &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR          &kp RPAR                       &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR          &kp RPAR       
&trans  &kp EXCL   &kp AT     &kp HASH   &kp DLLR          &kp PRCNT        &kp C_MUTE                    &mmv MOVE_DOWN                   &trans  &kp EXCL   &kp AT     &kp HASH   &kp DLLR          &kp PRCNT      
                              &trans     &trans            &kp SPACE                                                                                                     &trans     &trans            &kp SPACE      
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3           &kp F4           &kp F5                                          &mmv MOVE_UP                     &kp F6         &kp F7  &kp F8  &kp F9  &kp F10          &none
&trans  &out OUT_USB  &out OUT_BLE  &rgb_ug RGB_TOG  &sys_reset       &bootloader                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader    &trans  &trans  &trans  &kp PRINTSCREEN  &none
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_CLR        &kp C_MUTE                    &mmv MOVE_DOWN                   &studio_unlock &trans  &trans  &trans  &kp SCROLLLOCK   &none
                                    &trans           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF                                                                  &trans         &trans  &trans 
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
